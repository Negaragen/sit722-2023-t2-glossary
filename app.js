const express = require('express');
const app = express();

app.set('view engine', 'ejs');

const glossary = [
  { term: 'ARA', definition: 'An automated procedure called application release automation (ARA) automatically bundles and releases an application or application updates from the development stage to the production stage. With code testing and security features, ARA improves the software development and application delivery processes. A model-driven continuous deployment procedure is supported by ARA.', reference: '“What is application release automation (ARA)? | Definition from TechTarget.” https://www.techtarget.com/searchitoperations/definition/application-release-automation-ARA#:~:text=Application%20release%20automation%20(ARA)%20is,environment%20management%20and%20modeling%20tools. (accessed Jul. 13, 2023).' },
  { term: 'Artifact', definition: 'Any deliverable connected with a project that aids in describing the purpose, architecture, and layout of the software being created is referred to as an artefact.', reference: '“DevOps DevOps Terminology: A Glossary - Plutora.” https://www.plutora.com/devops-at-scale/terminology-glossary#:~:text=Artifact,of%20the%20software%20being%20developed. (accessed Jul. 13, 2023).' },
  { term: 'Branching', definition: 'Branching is one of the best benefits of version control software.When developers make modifications to that code, they can produce branches and offshoots of the project that essentially act as independent entities. A branch gets merged back into the trunk once it has been satisfactorily tested and finalised.', reference: '“DevOps Branching Strategy: What Is It & How It Works - Heptabit by Sedmi odjel.” https://www.heptabit.at/blog/devops/devops-branching-strategy-what-is-it-how-it-works#:~:text=Branching%20is%20the%20process%20of,be%20complicated%20and%20get%20messy. (accessed Jul. 13, 2023).' },
  { term: 'Configuration management', definition: 'DevOps lifecycles include configuration management as a critical component. The automation of the systems administration role through DevOps configuration automates infrastructure management and deployment.', reference: '“Configuration management: definition and benefits.” https://www.atlassian.com/microservices/microservices-architecture/configuration-management#:~:text=DevOps%20configuration%20management&text=DevOps%20configuration%20is%20the%20evolution,the%20umbrella%20of%20software%20engineering. (accessed Jul. 13, 2023).' },
  { term: 'Infrastructure Monitoring', definition: 'Infrastructure monitoring involves gathering and analysing data from IT systems, processes, and infrastructure in order to enhance business outcomes and provide value for the entire organisation.Infrastructure monitoring makes sure businesses can respond to problems before they become costly and time-consuming.', reference: '“What is infrastructure monitoring? Tools & best practices.” https://www.dynatrace.com/news/blog/what-is-infrastructure-monitoring-2/#:~:text=Infrastructure%20monitoring%20is%20the%20process,the%20oxygen%20to%20your%20infrastructure. (accessed Jul. 13, 2023).' },
  { term: 'version control system (VCS)', definition: 'A file or set of files are tracked over time by a version control system (VCS). A centralised VCS, which employs a server to keep all the versions of a file, is the most popular form. A file can be checked out from the server by developers, who can then make modifications and check it back in. The revised version of the file is then stored on the server.', reference: '“What is version control? | GitLab.” https://about.gitlab.com/topics/version-control/ (accessed Jul. 13, 2023).' },
  { term: 'Release management', definition: 'Release management is the process of supervising the planning, scheduling, and deployment of software releases while they are being tested in multiple environments and at various stages of development.', reference: '“Release Management in DevOps _ BMC Software | Blogs.” https://www.bmc.com/blogs/devops-release-management/ (accessed Jul. 13, 2023).' },
  { term: 'Continuous Delivery', definition: 'With the aid of automated technologies, continuous delivery is a DevOps practise that continuously builds, tests, and delivers enhancements to software code and user environments. The continuous delivery (CD) paradigm main result is code that is constantly in a deployable state.', reference: '“Continuous delivery - definition & overview | Sumo Logic.” https://www.sumologic.com/glossary/continuous-delivery/#:~:text=with%20Sumo%20Logic-,What%20is%20continuous%20delivery%3F,always%20in%20a%20deployable%20state. (accessed Jul. 14, 2023).' },
  { term: 'Continuous Deployment', definition: 'Following a series of thorough, automated tests, new code or a change is deployed directly to the production environment in a software development technique called continuous deployment. The application end users can see the modifications to the software (after deployment). ', reference: '“What is Continuous Deployment in DevOps?” https://insights.daffodilsw.com/blog/what-is-continuous-deployment-in-devops (accessed Jul. 14, 2023).' },
  { term: 'Deployment Pipline', definition: 'The collection of automated procedures and instruments known as a DevOps pipeline is used by the development and operations teams to compile, assemble, test, and deploy software code more quickly and easily. The word "pipeline" doesnt quite match because it is more like an assembly line.', reference: '“What is a Pipeline in DevOps? A Complete Guide | Simplilearn.” https://www.simplilearn.com/what-is-pipeline-in-devops-tools-implementation-article#:~:text=A%20DevOps%20pipeline%20is%20the,software%20code%20faster%20and%20easier. (accessed Jul. 14, 2023).' },
  { term: 'Continuous Testing', definition: 'The technique of running unattended automated tests across all environments as part of the software delivery pipeline to provide instant feedback on the calibre of a code build', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Jul. 27, 2023).' },
  { term: 'Build Artifact Repository', definition: 'All binaries needed during construction are kept in one location. simplifies the build and dependency management procedures, aids in team security and consistency, and makes automated deployment feasible and scalable.', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Jul. 27, 2023).' },
  { term: 'Configuration Drift', definition: 'When servers in a companys infrastructure diverge more and more from their intended configuration over time, this is known as configuration drift. It typically results from software or hardware modifications that are not routinely recorded or tracked.', reference: '“DevOps DevOps Terminology: A Glossary - Plutora.” https://www.plutora.com/devops-at-scale/terminology-glossary#:~:text=Configuration%20drift%20occurs%20when%20servers,not%20recorded%20or%20tracked%20consistently. (accessed Jul. 27, 2023).' },
  { term: 'Containers-as-a-Service (CaaS)', definition: 'Software developers and IT departments can upload, organise, run, scale, and manage containers using containers as a service (CaaS), a cloud-based service that uses container-based virtualization.', reference: '“Containers as a Service | Atlassian.” https://www.atlassian.com/microservices/cloud-computing/containers-as-a-service (accessed Jul. 27, 2023).' },
  { term: 'Continuous Quality', definition: 'A guideline that promotes the pursuit of quality throughout the whole SDLC, starting with the definition of requirements and continuing with code development, testing, and operations. The organisation of the application code pipeline is yet another crucial area of Continuous Quality concentration. When code is manually moved between environments, there are numerous chances that the quality of the programme will suffer.', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Jul. 27, 2023).' },
  { term: 'Fail Fast', definition: 'To fail fast is to have a procedure for beginning work on a project, receiving feedback right away, and then deciding whether to continue working on that task or adopt a different strategy.', reference: '“Fail Fast | Agile Dictionary | Agile Academy.” https://www.agile-academy.com/en/agile-dictionary/fail-fast/ (accessed Jul. 27, 2023).' },
  { term: 'Integration Testing', definition: 'A group of software components, modules, or units are assessed as part of the software testing process known as integration testing to determine whether the system complies with functional requirements.', reference: '“The Ultimate Guide to Integration Testing - Spiceworks.” https://www.spiceworks.com/tech/devops/articles/what-is-integration-testing/ (accessed Jul. 27, 2023).' },
  { term: 'Issue Tracking', definition: 'Programmers and quality assurance staff can follow the flow of new features and problems from identification to resolution using this procedure ', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Jul. 27, 2023).' },
  { term: 'Lead Time', definition: 'The lead time for changes, according to the DevOps definition, is the interval between when a developer enters code into version control and when that change is deployed to the live environment.', reference: '“Why are there so many definitions of lead time? - Octopus Deploy.” https://octopus.com/blog/definitions-of-lead-time#:~:text=Lead%20time%20definitions,process%20than%20the%20Lean%20definition. (accessed Jul. 27, 2023).' },
  { term: 'Pair Programming', definition: 'Pair programming is a method of agile software development where two programmers collaborate. Agile software development aims to continuously provide software so that results can be assessed more quickly.', reference: '  “What Is Pair Programming?” https://www.codecademy.com/resources/blog/what-is-pair-programming/ (accessed Jul. 27, 2023).' },
  { term: 'Autonomy', definition: 'Any description of a software development process, such as diagrams, user requirements, and UML models, may be mentioned.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 '},
  { term: 'Build Agent', definition: 'an agent that can be installed locally or remotely in relation to the continuous integration server. It communicates with one another on managing software builds.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752' },
  { term: 'Complex-Adaptive Systems', definition: 'Any system composed of a number of closely related, smaller components that are dynamically connected and have the ability to alter in response to changes for the advantage of a macrostructure.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752' },
  { term: 'Canary Release', definition: 'This is a go-live approach where a new application version gets released to a small batch of production servers, then monitored closely to see if it functions as it should, similar to how canaries were taken into coal mines to test the air. The version is rolled out to every production environment if it shows to be reliable.', reference: 'Simplilearn.com. (2019). Top 40 DevOps Terms You Should Know. [online] Available at: https://www.simplilearn.com/top-devops-terms-you-should-know-article [Accessed 17 Aug. 2023].' },
  { term: 'Containerazation', definition: 'The deployment and operation of distributed applications using virtualization at the operating system (OS) level without the need to start a new virtual machine for each use.', reference: 'Simplilearn.com. (2019). Top 40 DevOps Terms You Should Know. [online] Available at: https://www.simplilearn.com/top-devops-terms-you-should-know-article [Accessed 17 Aug. 2023].' },
  { term: 'Dark Lunch', definition: 'a method of developing software when a new version of the code, one that adds new functionality, is published to your team or a small group of users within the company, but it is either not clearly active or is only partially activated. A canary release is comparable to this procedure.', reference: 'Simplilearn.com. (2019). Top 40 DevOps Terms You Should Know. [online] Available at: https://www.simplilearn.com/top-devops-terms-you-should-know-article [Accessed 17 Aug. 2023].' },
  { term: 'Event-Driven Architecture', definition: 'A software architectural pattern where the system is designed to respond to, consume, and detect other events in addition to producing messages or events itself.', reference: 'Simplilearn.com. (2019). Top 40 DevOps Terms You Should Know. [online] Available at: https://www.simplilearn.com/top-devops-terms-you-should-know-article [Accessed 17 Aug. 2023].' },
  { term: 'Exploratory Testing', definition: 'a testing procedure in which human testers are free to test areas that might possibly have bugs that automated testing couldnt find.', reference: 'Simplilearn.com. (2019). Top 40 DevOps Terms You Should Know. [online] Available at: https://www.simplilearn.com/top-devops-terms-you-should-know-article [Accessed 17 Aug. 2023].' },
  { term: 'source control', definition: 'a method for recording, monitoring, and controlling software modification. This is frequently accomplished by first establishing branches (safe copies for adding new features) off of the softwares stable master version, and then merging those stable feature branches back into the stable master version. Version control or revision control are other names for this.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752' },
  { term: 'Staging Environment', definition: 'used to test the more recent version of your software before putting it into use in a live setting. To give you the best chance of finding any flaws before releasing your programme, staging is designed to closely resemble your real production environment.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752' },
  { term: ' Behavior-Driven Development (BDD)',  definition: ' An advancement of test-driven development that places a strong emphasis on working together with business stakeholders to build user stories that direct the creation of the application using a human-readable DSL.', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 01, 2023).'},
  { term: 'commit', definition:' a technique for documenting repository changes and adding a log message to explain them.', reference: '48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 01, 2023).'},
  { term: 'Complex-Adaptive Systems', definition: 'Any system composed of a number of closely related, smaller components that are dynamically connected and have the ability to alter in response to changes for the advantage of a macrostructure.', reference: 'Dz. Inc, “48 DevOps Terms You Should Know (A DevOps Glossary),” Medium, Jul. 24, 2017. https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752' },
  { term: 'Complex-Adaptive Systems', definition: 'Any system composed of a number of closely related smaller components that are dynamically connected and have the ability to alter in response to changes for the advantage of a macrostructure.', reference: '48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 01, 2023).' },
  { term: 'Configuration Drift', definition: 'How ad hoc changes (like hotfixes) made manually and without committing them to version control cause software and hardware configurations to diverge from the master version. a major contributor to technical debt frequently.', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 01, 2023).' },
  { term:'Build atumation', definition: 'tools or frameworks that enable the automatic compilation of source code into executable binaries. Unit testing at the code level is frequently used to make sure that individual lines of code perform as expected.', reference: 'Common DevOps Terms | Glossary | Digital.ai., https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 01, 2023).' },
  { term:'Feedback loops', definition: 'One of the main tenets of DevOps is the creation of quick and continuous feedback between operations and development early in the software delivery process. By doing this, you not only increase the likelihood that youre providing clients with what they genuinely want, but you also ease the burden on development, lessen concern about deployment, improve communication between dev and ops and increase productivity.', reference: '"Common DevOps Terms | Glossary | Digital.ai.” https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 01, 2023).' },
  { term: 'Infrastructure as code', definition: 'a method of managing system configuration in which machines, network devices, operating systems, middleware, etc. are provided in a format that is completely automatable. The "blueprint" or specification is thought of as code that is run by provisioning tools, maintained in version control, and generally subject to the same procedures as used for application code development.', reference: '“Common DevOps Terms | Glossary | Digital.ai.” https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 01, 2023).' },
  { term: 'Jenkins', definition: 'Continuous integration has long been accomplished with Jenkins, an open source Java automation server. Jenkins allows developers to frequently merge their code into a shared repository. When businesses try to grow their software delivery procedures, they frequently discover that Jenkins requires too much scripting and/or workflow maintenance and that they need to switch to continuous delivery.', reference: '“Common DevOps Terms | Glossary | Digital.ai.” https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 01, 2023).'},
  { term: 'Non-functional requirements (NFRs)', definition: 'the description of system properties that characterise how readily or successfully a piece of functionality can be used, rather than just whether it exists, such as ease of use, clarity of design, delay, speed, and ability to handle high numbers of users. The continuous delivery feedback loop can also be used to address and enhance these qualities.', reference: '“Common DevOps Terms | Glossary | Digital.ai.” https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 01, 2023).'},
  { term:'Docker Swarm', definition: 'a Docker-developed container orchestration engine. It is a built-in scheduling and clustering mechanism for Docker containers that may operate thousands of containers concurrently. Unfortunately, it lacks Kubernetes capability and is utterly obsolete as of mid-2018.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).' },
  { term: 'Django framework ', definition: 'Django is a high-level Python framework that emphasises clear design, quick development, and great app performance. has seen widespread application in the processing of big data and web development.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).' },
  { term: 'Cluster', definition: 'a collection of linked instances (bare-metal servers, virtual machines, Kubernetes pods, etc.) that are handled as a single unit to support load balancing, auto-scaling, and high availability.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).'},
  { term: 'ElasticSearch', definition: 'Built on Apache Lucene, ElasticSearch is a distributed, RESTful search and analytics engine. Elasticsearch, the brain of the Elastic stack, enables the storing and processing of data from numerous cloud monitoring and logging applications.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).'},
  { term: ' Behavior-Driven Development (BDD)',  definition: ' An advancement of test-driven development that places a strong emphasis on working together with business stakeholders to build user stories that direct the creation of the application using a human-readable DSL.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).'},
  { term: 'commit', definition:' a technique for documenting repository changes and adding a log message to explain them.', reference: '48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium.” https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 01, 2023).'},
  { term: 'Complex-Adaptive Systems', definition: 'Any system composed of a number of closely related, smaller components that are dynamically connected and have the ability to alter in response to changes for the advantage of a macrostructure.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).' },
  { term: 'Asterisk', definition: 'the free and open-source telephone system used for online calls. It is one of the most adaptable systems that can communicate through APIs with a variety of software applications, facilitating effective and multifunctional inter-business communications.', reference: '“DevOps glossary: 78 basic DevOps terms explained in simple words | IT Svit.” https://itsvit.com/blog/devops-glossary-78-basic-devops-terms-in-simple-words/ (accessed Sep. 12, 2023).' },
  { term: 'Bastion host', definition: 'an exclusive server that can access private networks and fend off hacker attempts. typically has SSH keys for maintaining and accessing the underlying cloud infrastructure as well as one app (such as a proxy server). For resilient architecture on AWS or any other cloud platform, IT Svit leverages bastion hosts.', reference: '“48 DevOps Terms You Should Know (A DevOps Glossary) | by DZone Inc. | Medium https://medium.com/@DZoneInc/48-devops-terms-you-should-know-a-devops-glossary-37e60fd23752 (accessed Sep. 12, 2023).' },
  { term:'Back-end', definition: 'the software engine that the user cannot access directly. This engine responds to requests from the user interface and carries out specific tasks, such as loading and storing data to the database, among others.', reference: 'Common DevOps Terms | Glossary | Digital.ai., https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 12, 2023).' },
  { term:'Chaos Engineering', definition: 'a technique used to deliberately introduce failures and disturbances into a system in order to test its resilience and find any weaknesses. This makes it possible to guarantee that systems can manage unanticipated production failures.', reference: '"Common DevOps Terms | Glossary | Digital.ai.” https://digital.ai/glossary/common-devops-terms/ (accessed Sep. 12, 2023).' },
  
];



app.get('/', (req, res) => {
  res.render('glossary', { glossary });
});

const port = 3001;
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});

module.exports = app;
